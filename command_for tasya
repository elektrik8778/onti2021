from __future__ import print_function
import rospy
from clover import srv
from std_srvs.srv import Trigger
from std_msgs.msg import Float32MultiArray

rospy.init_node('flight')

import rospy
from clover import srv
from std_srvs.srv import Trigger













def read_sensor():
    data = rospy.wait_for_message('sensors', Float32MultiArray).data
    print(data)



read_sensor()


i=1
with open('temp.txt', 'a') as f:
     f.write('v tochke '+str(i)+' '+str('temperature')+'\n')
from __future__ import print_function
import rospy
import cv2
from sensor_msgs.msg import Image
from cv_bridge import CvBridge 
from clover import srv
from std_srvs.srv import Trigger
from std_msgs.msg import Float64MultiArray
import rospy
from clover import srv
from std_srvs.srv import Trigger

rospy.init_node('flight')

get_telemetry = rospy.ServiceProxy('get_telemetry', srv.GetTelemetry)
navigate = rospy.ServiceProxy('navigate', srv.Navigate)
navigate_global = rospy.ServiceProxy('navigate_global', srv.NavigateGlobal)
set_position = rospy.ServiceProxy('set_position', srv.SetPosition)
set_velocity = rospy.ServiceProxy('set_velocity', srv.SetVelocity)
set_attitude = rospy.ServiceProxy('set_attitude', srv.SetAttitude)
set_rates = rospy.ServiceProxy('set_rates', srv.SetRates)
land = rospy.ServiceProxy('land', Trigger)




def read_sensor():
  data = rospy.wait_for_message('sensors', Float64MultiArray).data
  print(data)
    
navigate(x=0,y=0,z=1,speed=1,frame_id='body', auto_arm=True)
rospy.sleep(5)


read_sensor()

with open('data_from_sensor.txt', 'a') as f:
     f.write('vo vseh tochkah temp -8 '+str(read_sensor())+'\n')
